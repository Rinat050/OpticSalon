@using OpticSalon.Blazor.Shared.Dialogs
@using OpticSalon.Domain.Enums
@using OpticSalon.Domain.Extensions
@using OpticSalon.Domain.Models

@inject NavigationManager NavManager
@inject IOrderService OrderService

@if (_isLoading)
{
    <MudProgressLinear Color="MudBlazor.Color.Info" Indeterminate="true" Class="m-1" />
    return;
}

@if (Orders.Count() == 0)
{
    <MudAlert Class="m-2" Severity="Severity.Normal">Заказов пока нет...</MudAlert>
    return;
}

<MudTable  T="OrderShortForClient" Items="@Orders">
    <HeaderContent>
        <MudTh>Номер заказа</MudTh>
        <MudTh>Дата создания</MudTh>
        <MudTh>Номер телефона</MudTh>
        <MudTh>Статус</MudTh>
        <MudTh>Просмотр</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Номер заказа">@context.Id</MudTd>
        <MudTd DataLabel="Дата создания">@context.CreatedDate</MudTd>
        <MudTd DataLabel="Номер телефона">@context.ContactPhoneNumber</MudTd>
        <MudTd DataLabel="Статус"><MudChip Color="@_statusColors[context.Status]">@context.Status.GetDisplayName()</MudChip></MudTd>
        <MudTd DataLabel="Просмотр"><MudIconButton Icon="@Icons.Material.Filled.ArrowRight" OnClick="@(() => OpenOrderInfo(context.Id))"></MudIconButton></MudTd>
    </RowTemplate>
</MudTable>


@code {
    [Parameter]
    public List<OrderShortForClient> Orders { get; set; } = new();
    private bool _isLoading;

    private Dictionary<OrderStatus, MudBlazor.Color> _statusColors = new Dictionary<OrderStatus, MudBlazor.Color>()
    {
        {OrderStatus.Created , MudBlazor.Color.Surface},
        {OrderStatus.InWork , MudBlazor.Color.Warning},
        {OrderStatus.Completed , MudBlazor.Color.Info},
        {OrderStatus.Issued , MudBlazor.Color.Success}
    };

    private async Task OpenOrderInfo(int order)
    {
        NavManager.NavigateTo($"/orderShow/{order}");
    }
}
