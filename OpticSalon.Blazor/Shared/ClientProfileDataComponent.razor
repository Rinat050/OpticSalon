@using OpticSalon.Domain.Models

@inject IClientService ClientService
@inject ISnackbar Snackbar

<EditForm Model="@Client" OnValidSubmit="@Save">
    <DataAnnotationsValidator />
    <MudCard Class="p-2 w-75" Style="border-radius: 15px;"
             Outlined="false" Elevation="1">

        <MudCardContent>
            <MudGrid Justify="Justify.Center" Spacing="1">
                <MudItem xs="12">
                    <MudTextField @bind-Value="Client.Surname" For="@(() => Client.Surname)"
                                  Variant="Variant.Outlined" Label="Фамилия"></MudTextField>
                </MudItem>
                <MudItem xs="6">
                    <MudTextField @bind-Value="Client.Name" For="@(() => Client.Name)"
                                  Variant="Variant.Outlined" Label="Имя"></MudTextField>
                </MudItem>
                <MudItem xs="6">
                    <MudTextField @bind-Value="Client.PhoneNumber" For="@(() => Client.PhoneNumber)"
                                  Variant="Variant.Outlined" InputType="InputType.Telephone" Label="Телефон"
                                  Mask="@(new PatternMask("+0 (000) 000 00-00"))"></MudTextField>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField @bind-Value="Client.Address" For="@(() => Client.Address)"
                                  Variant="Variant.Outlined" Label="Адрес"></MudTextField>
                </MudItem>
            </MudGrid>
        </MudCardContent>

        <MudGrid Justify="Justify.FlexStart">
            <MudItem xs="3">
                <MudButton Class="m-2" Disabled="@_isLoading" FullWidth Variant="Variant.Filled"
                           Color="MudBlazor.Color.Primary" ButtonType="ButtonType.Submit">Сохранить</MudButton>
            </MudItem>
        </MudGrid>
    </MudCard>
</EditForm>

@code {
    [Parameter]
    public Client Client { get; set; } = new();
    [Parameter]
    public Func<Task> OnValidSubmit { get; set; } = null;

    private bool _isLoading;

    private async Task Save()
    {
        _isLoading = true;
        var res = await ClientService.UpdateClient(Client);
        _isLoading = false;

        if (res.Success)
        {
            OnValidSubmit?.Invoke();
            Snackbar.Add(res.Description, Severity.Info);
            return;
        }

        Snackbar.Add(res.Description, Severity.Warning);
    }
}
