@using Microsoft.AspNetCore.Components.Web
@namespace OpticSalon.Blazor.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="icon" href="~/images/logo-dark.png" type="image/png"/>
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="OpticSalon.Blazor.styles.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="_content/Radzen.Blazor/css/material-base.css">
    <component type="typeof(HeadOutlet)" render-mode="Server" />
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script src="_content/Radzen.Blazor/Radzen.Blazor.js?v=@(typeof(Radzen.Colors).Assembly.GetName().Version)"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    <script>
        window.setImage = async (imageElementId, imageStream) => {
          const arrayBuffer = await imageStream.arrayBuffer();
          const blob = new Blob([arrayBuffer]);
          const url = URL.createObjectURL(blob);
          const image = document.getElementById(imageElementId);
          image.onload = () => {
            URL.revokeObjectURL(url);
          }
          image.src = url;
        }

        window.getById = (imageId) => {
            return document.getElementById(imageId) !== null;
        }
    </script>
    <script type="text/javascript">
        window.getDimensions = function() {
            return {
                    width: window.innerWidth,
                    height: window.innerHeight
                };
        };
    </script>
</body>
</html>
