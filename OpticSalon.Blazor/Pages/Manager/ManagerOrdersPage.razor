@page "/managerOrders"

@using OpticSalon.Auth.Models
@using OpticSalon.Domain.Enums
@using OpticSalon.Domain.Extensions

@inject IOrderService OrderService
@inject NavigationManager NavManager

@attribute [Authorize(Roles = $"{Role.Admin}, {Role.Manager}")]

<PageTitle>Заказы</PageTitle>

@if (_isLoading)
{
    <MudProgressLinear Color="MudBlazor.Color.Info" Indeterminate="true" Class="m-1" />
    return;
}

@if (_orders.Count == 0)
{
    <MudAlert Class="m-2" Severity="Severity.Normal">Не найдено...</MudAlert>
    return;
}

<MudTable OnRowClick="@OrderClick" T="OpticSalon.Domain.Models.OrderShortForManager" Items="_orders" Filter="new Func<OpticSalon.Domain.Models.OrderShortForManager,bool>(Filter)">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Заказы на изготовление очков</MudText>
        <MudSpacer />        
        <MudTextField @bind-Value="_searchStr" Placeholder="Поиск" 
            Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" 
            IconSize="Size.Medium" Class="m-2"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh><MudTableSortLabel SortBy="new Func<OpticSalon.Domain.Models.OrderShortForManager, object>(x=>x.Id)">Номер заказа</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<OpticSalon.Domain.Models.OrderShortForManager, object>(x=>x.CreatedDate)">Дата создания</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<OpticSalon.Domain.Models.OrderShortForManager, object>(x=>x.Client)">Клиент</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<OpticSalon.Domain.Models.OrderShortForManager, object>(x=>x.Master)">Мастер</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<OpticSalon.Domain.Models.OrderShortForManager, object>(x=>x.Status)">Статус</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<OpticSalon.Domain.Models.OrderShortForManager, object>(x=>x.Status)">Дата выдачи</MudTableSortLabel></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Номер заказа">@context.Id</MudTd>
        <MudTd DataLabel="Дата создания">@context.CreatedDate.ToShortDateString()</MudTd>
        <MudTd DataLabel="Клиент">@context.Client</MudTd>
        <MudTd DataLabel="Мастер">@context.Master</MudTd>
        <MudTd DataLabel="Статус">
            <MudChip Color="@_statusColors[context.Status]">@context.Status.GetDisplayName()</MudChip>
        </MudTd>
        <MudTd DataLabel="Дата выдачи">@(context.IssueDate == null ? "" : ((DateTime)context.IssueDate).ToShortDateString())</MudTd>
    </RowTemplate>
</MudTable>

@code {
    private bool _isLoading;
    private string _searchStr = "";
    private List<OpticSalon.Domain.Models.OrderShortForManager> _orders = new();
    private Dictionary<OrderStatus, MudBlazor.Color> _statusColors = new Dictionary<OrderStatus, Color>()
    {
        {OrderStatus.Created , MudBlazor.Color.Surface},
        {OrderStatus.InWork , MudBlazor.Color.Warning},
        {OrderStatus.Completed , MudBlazor.Color.Info},
        {OrderStatus.Issued , MudBlazor.Color.Success}
    };

    protected async override Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        _isLoading = true;
        var res = await OrderService.GetOrdersForManager();

        if (res.Success)
        {
            _orders = res.Data!;
        }

        _isLoading = false;
    }

    private bool Filter(OpticSalon.Domain.Models.OrderShortForManager order) => FilterFunc(order, _searchStr);

    private bool FilterFunc(OpticSalon.Domain.Models.OrderShortForManager order, string searchStr)
    {
        if (string.IsNullOrWhiteSpace(searchStr))
            return true;
        if (order.Master.Contains(searchStr, StringComparison.OrdinalIgnoreCase))
            return true;
        if (order.Client.Contains(searchStr, StringComparison.OrdinalIgnoreCase))
            return true;
        if (order.Id.ToString().Contains(searchStr, StringComparison.OrdinalIgnoreCase))
            return true;
        if (order.Status.GetDisplayName()!.Contains(searchStr, StringComparison.OrdinalIgnoreCase))
            return true;
        if (order.CreatedDate.ToString().Contains(searchStr, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    private void OrderClick(TableRowClickEventArgs<OpticSalon.Domain.Models.OrderShortForManager> args)
    {
        NavManager.NavigateTo($"/orderShow/{args.Item.Id}");
    }
}
